apiVersion: v1
kind: Secret
metadata:
  name: minkoku
stringData:
  config.json: |
    {
      "auths": {
        "ghcr.io": {
          "auth": ""  # FILL THIS IN
        }
      }
    }
  .mink.yaml: |
    as: me
    bundle: ghcr.io/USERNAME/bundles  # FILL THIS IN TOO
    image: ghcr.io/USERNAME/images    # FILL THIS IN TOO
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: minkoku
---
# TODO(mattmoor): Should this be admin or editor?
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: minkoku-admin
subjects:
  - kind: ServiceAccount
    name: minkoku
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
---
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: minkoku
spec:
  template:
    metadata:
     annotations:
       autoscaling.knative.dev/maxScale: "1"
    spec:
      serviceAccountName: minkoku
      containers:
      - image: task://kaniko?dockerfile=Dockerfile.vanilla
        env:
        - name: DOCKER_CONFIG
          value: /minkoku/
        volumeMounts:
        - name: minkoku-config
          mountPath: /minkoku/
        ports:
        - containerPort: 80
      volumes:
      - name: minkoku-config
        # TODO: Simplify, this isn't really useful.
        projected:
          sources:
          - secret:
              name: minkoku
              items:
              - key: .mink.yaml
                path: .mink.yaml
              - key: config.json
                path: config.json
